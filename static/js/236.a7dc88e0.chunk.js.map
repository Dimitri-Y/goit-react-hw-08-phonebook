{"version":3,"file":"static/js/236.a7dc88e0.chunk.js","mappings":"+NAEaA,EAAYC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAOtBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mG,yHCLhBG,EAAe,WACxB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MAEbC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAIE,OAApBf,EAAIc,EAAJd,KAAMgB,EAAKF,EAALE,MACd,OAAQhB,GACJ,IAAK,OACDC,EAAQe,GACR,MACJ,IAAK,QACDX,EAASW,GACT,MACN,IAAK,WACHP,EAAYO,GAKlB,EAeA,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAda,SAAAC,GACnBA,EAAMC,iBACNV,GACIW,EAAAA,EAAAA,IAAS,CACPrB,KAAAA,EACAI,MAAAA,EACAI,SAAAA,KAGNP,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAE+Ba,SAAA,EACzBL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACAL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRX,MAAOhB,EACP4B,SAAUhB,QAGdK,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLxB,KAAK,QACLyB,QAAQ,mDACRC,MAAM,QACNC,UAAQ,EACRX,MAAOZ,EACPwB,SAAUhB,QAGdK,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAAA,SACIC,KAAK,WACLxB,KAAK,WACLyB,QAAQ,uCACRC,MAAM,6GACNC,UAAQ,EACRX,MAAOR,EACPoB,SAAUhB,WAIlBW,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAG9B,E,UChFe,SAASO,IACtB,OACEZ,EAAAA,EAAAA,MAAC5B,EAAAA,EAAS,CAAAiC,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAC5B,EAAY,MAGnB,C","sources":["pages/Pages.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const Head = styled.h1`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 100px;\n  font-size: 80px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n        case 'email':\n            setEmail(value);\n            break;\n      case 'password':\n        setPassword(value);\n            break;\n        default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n        register({\n          name,\n          email,\n          password,\n        })\n      );\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n        <ul>\n        <li>\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleChange}\n            />\n          </li>\n          <li>\n            <label>Email</label>\n            <input\n              type=\"email\" \n              name=\"email\"\n              pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n              title=\"Email\"\n              required\n              value={email}\n              onChange={handleChange}\n            />\n          </li>\n          <li>\n            <label>Password</label>\n            <input\n                type=\"password\" \n                name=\"password\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\" \n                title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n                required\n                value={password}\n                onChange={handleChange}\n            />\n          </li>\n        </ul>\n        <button type=\"submit\">Register</button>\n       </form>\n  );\n};","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Container } from './Pages.styled';\n\nexport default function Register() {\n  return (\n    <Container>\n      <title>Registration</title>\n      <RegisterForm />\n    </Container>\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Head","_templateObject2","RegisterForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleChange","evt","_evt$target","target","value","_jsxs","onSubmit","event","preventDefault","register","children","_jsx","type","pattern","title","required","onChange","Register"],"sourceRoot":""}